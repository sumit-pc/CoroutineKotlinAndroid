Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\napply plugin: 'kotlin-android-extensions'\r\napply plugin: 'kotlin-kapt'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"29.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.lukaslechner.coroutineusecasesonandroid\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    viewBinding {\r\n        enabled = true\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    kotlinOptions {\r\n        jvmTarget = JavaVersion.VERSION_1_8.toString()\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n\r\n    def lifecycle_version = \"2.2.0\"\r\n    def coroutines_version = \"1.3.9\"\r\n\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\r\n\r\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version\"\r\n    implementation \"org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version\"\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    implementation 'com.google.android.material:material:1.1.0'\r\n\r\n    implementation 'androidx.core:core-ktx:1.2.0'\r\n    implementation \"androidx.activity:activity-ktx:1.1.0\"\r\n\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    implementation 'androidx.cardview:cardview:1.0.0'\r\n\r\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version\"\r\n    implementation \"androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version\"\r\n\r\n    implementation 'com.squareup.retrofit2:retrofit:2.7.1'\r\n    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.1'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'\r\n\r\n    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'\r\n    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'\r\n    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'\r\n\r\n    implementation \"androidx.lifecycle:lifecycle-common-java8:$lifecycle_version\"\r\n\r\n    def work_manager_version = \"2.3.4\"\r\n    implementation \"androidx.work:work-runtime:$work_manager_version\"\r\n    implementation \"androidx.work:work-runtime-ktx:$work_manager_version\"\r\n\r\n    implementation 'com.jakewharton.timber:timber:4.7.1'\r\n\r\n    def room_version = \"2.2.5\"\r\n    implementation \"androidx.room:room-runtime:$room_version\"\r\n    implementation \"androidx.room:room-ktx:$room_version\"\r\n    kapt \"androidx.room:room-compiler:$room_version\"\r\n\r\n    testImplementation 'junit:junit:4.12'\r\n    testImplementation 'androidx.arch.core:core-testing:2.1.0'\r\n    testImplementation \"org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version\"\r\n    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.7.1'\r\n\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 8f64ca5596a844280d817a150c90de5c64accfd5)
+++ b/app/build.gradle	(date 1642270300881)
@@ -41,8 +41,8 @@
 
 dependencies {
 
-    def lifecycle_version = "2.2.0"
-    def coroutines_version = "1.3.9"
+    def lifecycle_version = "2.4.0"
+    def coroutines_version = "1.4.2"
 
     implementation fileTree(dir: 'libs', include: ['*.jar'])
     implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
@@ -50,14 +50,14 @@
     implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
     implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
 
-    implementation 'androidx.appcompat:appcompat:1.1.0'
-    implementation 'com.google.android.material:material:1.1.0'
+    implementation 'androidx.appcompat:appcompat:1.4.0'
+    implementation 'com.google.android.material:material:1.4.0'
 
-    implementation 'androidx.core:core-ktx:1.2.0'
-    implementation "androidx.activity:activity-ktx:1.1.0"
+    implementation 'androidx.core:core-ktx:1.7.0'
+    implementation "androidx.activity:activity-ktx:1.4.0"
 
-    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
-    implementation 'androidx.recyclerview:recyclerview:1.1.0'
+    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
+    implementation 'androidx.recyclerview:recyclerview:1.2.1'
     implementation 'androidx.cardview:cardview:1.0.0'
 
     implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
@@ -74,22 +74,22 @@
 
     implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
 
-    def work_manager_version = "2.3.4"
+    def work_manager_version = "2.7.1"
     implementation "androidx.work:work-runtime:$work_manager_version"
     implementation "androidx.work:work-runtime-ktx:$work_manager_version"
 
     implementation 'com.jakewharton.timber:timber:4.7.1'
 
-    def room_version = "2.2.5"
+    def room_version = "2.4.1"
     implementation "androidx.room:room-runtime:$room_version"
     implementation "androidx.room:room-ktx:$room_version"
     kapt "androidx.room:room-compiler:$room_version"
 
-    testImplementation 'junit:junit:4.12'
+    testImplementation 'junit:junit:4.13.2'
     testImplementation 'androidx.arch.core:core-testing:2.1.0'
     testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
     testImplementation 'com.squareup.retrofit2:retrofit-mock:2.7.1'
 
-    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
-    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
+    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
 }
Index: app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase2/Perform2SequentialNetworkRequestsViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lukaslechner.coroutineusecasesonandroid.usecases.coroutines.usecase2\r\n\r\nimport com.lukaslechner.coroutineusecasesonandroid.base.BaseViewModel\r\nimport com.lukaslechner.coroutineusecasesonandroid.mock.MockApi\r\n\r\nclass Perform2SequentialNetworkRequestsViewModel(\r\n    private val mockApi: MockApi = mockApi()\r\n) : BaseViewModel<UiState>() {\r\n\r\n    fun perform2SequentialNetworkRequest() {\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase2/Perform2SequentialNetworkRequestsViewModel.kt b/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase2/Perform2SequentialNetworkRequestsViewModel.kt
--- a/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase2/Perform2SequentialNetworkRequestsViewModel.kt	(revision 8f64ca5596a844280d817a150c90de5c64accfd5)
+++ b/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase2/Perform2SequentialNetworkRequestsViewModel.kt	(date 1642270382087)
@@ -7,7 +7,10 @@
     private val mockApi: MockApi = mockApi()
 ) : BaseViewModel<UiState>() {
 
-    fun perform2SequentialNetworkRequest() {
+    suspend fun perform2SequentialNetworkRequest() {
+        uiState.value = UiState.Loading
 
+        val getAndroidVersionCall = mockApi.getRecentAndroidVersions()
+        getAndroidVersionCall
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase2/MockApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lukaslechner.coroutineusecasesonandroid.usecases.coroutines.usecase2\r\n\r\nimport com.google.gson.Gson\r\nimport com.lukaslechner.coroutineusecasesonandroid.mock.createMockApi\r\nimport com.lukaslechner.coroutineusecasesonandroid.mock.mockAndroidVersions\r\nimport com.lukaslechner.coroutineusecasesonandroid.mock.mockVersionFeaturesAndroid10\r\nimport com.lukaslechner.coroutineusecasesonandroid.utils.MockNetworkInterceptor\r\n\r\nfun mockApi() = createMockApi(\r\n    MockNetworkInterceptor()\r\n        .mock(\r\n            \"http://localhost/recent-android-versions\",\r\n            Gson().toJson(mockAndroidVersions),\r\n            200,\r\n            1500\r\n        )\r\n        .mock(\r\n            \"http://localhost/android-version-features/29\",\r\n            Gson().toJson(mockVersionFeaturesAndroid10),\r\n            200,\r\n            1500\r\n        )\r\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase2/MockApi.kt b/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase2/MockApi.kt
--- a/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase2/MockApi.kt	(revision 8f64ca5596a844280d817a150c90de5c64accfd5)
+++ b/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase2/MockApi.kt	(date 1642270498397)
@@ -1,6 +1,5 @@
 package com.lukaslechner.coroutineusecasesonandroid.usecases.coroutines.usecase2
 
-import com.google.gson.Gson
 import com.lukaslechner.coroutineusecasesonandroid.mock.createMockApi
 import com.lukaslechner.coroutineusecasesonandroid.mock.mockAndroidVersions
 import com.lukaslechner.coroutineusecasesonandroid.mock.mockVersionFeaturesAndroid10
Index: .idea/runConfigurations.xml
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
deleted file mode 100644
--- a/.idea/runConfigurations.xml	(revision 8f64ca5596a844280d817a150c90de5c64accfd5)
+++ /dev/null	(revision 8f64ca5596a844280d817a150c90de5c64accfd5)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RunConfigurationProducerService">
-    <option name="ignoredProducers">
-      <set>
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
-      </set>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 8f64ca5596a844280d817a150c90de5c64accfd5)
+++ b/.idea/misc.xml	(date 1642259663442)
@@ -1,6 +1,15 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="DesignSurface">
+    <option name="filePathToZoomLevelMap">
+      <map>
+        <entry key="..\:/Project/Android/CoroutineKotlin/app/src/main/res/layout/activity_main.xml" value="0.25" />
+        <entry key="..\:/Project/Android/CoroutineKotlin/app/src/main/res/layout/activity_perform2sequentialnetworkrequests.xml" value="0.25" />
+      </map>
+    </option>
+  </component>
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase1/PerformSingleNetworkRequestViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lukaslechner.coroutineusecasesonandroid.usecases.coroutines.usecase1\r\n\r\nimport com.lukaslechner.coroutineusecasesonandroid.base.BaseViewModel\r\nimport com.lukaslechner.coroutineusecasesonandroid.mock.MockApi\r\n\r\nclass PerformSingleNetworkRequestViewModel(\r\n    private val mockApi: MockApi = mockApi()\r\n) : BaseViewModel<UiState>() {\r\n\r\n    fun performSingleNetworkRequest() {\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase1/PerformSingleNetworkRequestViewModel.kt b/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase1/PerformSingleNetworkRequestViewModel.kt
--- a/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase1/PerformSingleNetworkRequestViewModel.kt	(revision 8f64ca5596a844280d817a150c90de5c64accfd5)
+++ b/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/usecases/coroutines/usecase1/PerformSingleNetworkRequestViewModel.kt	(date 1642269241540)
@@ -8,6 +8,6 @@
 ) : BaseViewModel<UiState>() {
 
     fun performSingleNetworkRequest() {
-
+        uiState.value = UiState.Loading
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lukaslechner.coroutineusecasesonandroid\r\n\r\nimport android.os.Bundle\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.recyclerview.widget.DividerItemDecoration\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.lukaslechner.coroutineusecasesonandroid.base.*\r\nimport com.lukaslechner.coroutineusecasesonandroid.databinding.ActivityMainBinding\r\n\r\nclass MainActivity : BaseActivity() {\r\n\r\n    private lateinit var binding: ActivityMainBinding\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityMainBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n        hideUpButton()\r\n        initRecyclerView()\r\n    }\r\n\r\n    private val onUseCaseCategoryClickListener: (UseCaseCategory) -> Unit =\r\n        { clickedUseCaseCategory ->\r\n            val intent = UseCaseActivity.newIntent(applicationContext, clickedUseCaseCategory)\r\n            startActivity(intent)\r\n        }\r\n\r\n    private fun initRecyclerView() {\r\n        binding.recyclerView.apply {\r\n            adapter =\r\n                UseCaseCategoryAdapter(\r\n                    useCaseCategories,\r\n                    onUseCaseCategoryClickListener\r\n                )\r\n            hasFixedSize()\r\n            layoutManager = LinearLayoutManager(this@MainActivity)\r\n            addItemDecoration(initItemDecoration())\r\n        }\r\n    }\r\n\r\n    private fun initItemDecoration(): DividerItemDecoration {\r\n        val itemDecorator =\r\n            DividerItemDecoration(applicationContext, DividerItemDecoration.VERTICAL)\r\n        itemDecorator.setDrawable(\r\n            ContextCompat.getDrawable(\r\n                applicationContext,\r\n                R.drawable.recyclerview_divider\r\n            )!!\r\n        )\r\n        return itemDecorator\r\n    }\r\n\r\n    override fun getToolbarTitle() = \"Coroutine Usecases on Android\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/MainActivity.kt b/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/MainActivity.kt
--- a/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/MainActivity.kt	(revision 8f64ca5596a844280d817a150c90de5c64accfd5)
+++ b/app/src/main/java/com/lukaslechner/coroutineusecasesonandroid/MainActivity.kt	(date 1642262599896)
@@ -20,10 +20,10 @@
     }
 
     private val onUseCaseCategoryClickListener: (UseCaseCategory) -> Unit =
-        { clickedUseCaseCategory ->
-            val intent = UseCaseActivity.newIntent(applicationContext, clickedUseCaseCategory)
-            startActivity(intent)
-        }
+    { clickedUseCaseCategory ->
+        val intent = UseCaseActivity.newIntent(applicationContext, clickedUseCaseCategory)
+        startActivity(intent)
+    }
 
     private fun initRecyclerView() {
         binding.recyclerView.apply {
